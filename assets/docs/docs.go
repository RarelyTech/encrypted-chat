// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/group": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Filter group",
                "operationId": "GroupList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group's category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page, start from 1 (default: 1)",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count peer page, default is 50",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/model.PaginationRes"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/model.GroupListRes"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create an group (need signature verify)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Create group",
                "operationId": "GroupCreate",
                "parameters": [
                    {
                        "description": "Group info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GroupDetailWithPublicKey"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/group/active": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Active group",
                "operationId": "GroupActive",
                "parameters": [
                    {
                        "description": "Group id",
                        "name": "groupId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/categories": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "List all group categories",
                "operationId": "GroupCategories",
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/join": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Join group",
                "operationId": "GroupJoin",
                "parameters": [
                    {
                        "description": "Join info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupJoinReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GroupDetailWithPublicKey"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/group/joined": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Joined group list",
                "operationId": "GroupJoinedList",
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GroupJoinedListRes"
                            }
                        }
                    }
                }
            }
        },
        "/group/key": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Share key with group",
                "operationId": "GroupShareKey",
                "parameters": [
                    {
                        "description": "Group and key info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupShareKeyReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GroupPublicKey"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/group/key/used": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Setting current key of group",
                "operationId": "GroupKeyUsed",
                "parameters": [
                    {
                        "description": "Group keys",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupKeyUsedReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/kickout": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Kickout member",
                "operationId": "GroupKickout",
                "parameters": [
                    {
                        "description": "Group member info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupMemberReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/leave": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Leave group",
                "operationId": "GroupLeave",
                "parameters": [
                    {
                        "description": "Group id",
                        "name": "groupId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/manager": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Set manager",
                "operationId": "GroupManager",
                "parameters": [
                    {
                        "description": "Group member info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupMemberReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/recode": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Regenerate invite code",
                "operationId": "GroupReCode",
                "parameters": [
                    {
                        "description": "Group id",
                        "name": "groupId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/update": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Update group info",
                "operationId": "GroupUpdate",
                "parameters": [
                    {
                        "description": "Group info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GroupUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/group/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group"
                ],
                "summary": "Detail info of group",
                "operationId": "GroupDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GroupDetailRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/member/nonce/{address}": {
            "get": {
                "description": "Getting nonce string to be signed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Member signin nonce",
                "operationId": "MemberNonce",
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.MemberNonceRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/member/update": {
            "post": {
                "description": "need signature verify",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Update member's info",
                "operationId": "MemberUpdate",
                "parameters": [
                    {
                        "description": "Member's info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MemberUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        },
        "/member/{address}": {
            "get": {
                "description": "Getting member's profile using address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Member profile",
                "operationId": "MemberProfile",
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/model.MemberProfile"
                        }
                    }
                }
            }
        },
        "/memeber": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Member signin",
                "operationId": "MemberSignin",
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.MemberSigninRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/message": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "List message",
                "operationId": "MessageList",
                "parameters": [
                    {
                        "type": "string",
                        "name": "groupId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "last time",
                        "name": "time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Message"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Create message",
                "operationId": "MessageCreate",
                "parameters": [
                    {
                        "description": "message detail",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MessageCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ChatMessageCreateRes"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/message/read": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Mask message read",
                "operationId": "MessageRead",
                "parameters": [
                    {
                        "description": "group id",
                        "name": "groupId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response success",
                        "schema": {
                            "$ref": "#/definitions/app.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ChatMessageCreateRes": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.GroupCreateReq": {
            "type": "object",
            "required": [
                "category",
                "name",
                "sharedPublic"
            ],
            "properties": {
                "category": {
                    "description": "group's category",
                    "type": "string"
                },
                "intro": {
                    "description": "group intro",
                    "type": "string"
                },
                "maxMembers": {
                    "description": "group's max members",
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "public": {
                    "description": "` + "`" + `true` + "`" + ` create public group, ` + "`" + `false` + "`" + ` create private group",
                    "type": "boolean"
                },
                "sharedPublic": {
                    "description": "Member's public key for ` + "`" + `ecdh` + "`" + ` exchange",
                    "type": "string"
                }
            }
        },
        "model.GroupDetailRes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intro": {
                    "description": "optional",
                    "type": "string"
                },
                "inviteCode": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MemberWithPermission"
                    }
                },
                "membersCount": {
                    "type": "integer"
                },
                "membersMax": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "description": "group is belongs to current member",
                    "type": "boolean"
                },
                "public": {
                    "description": "group is public or private",
                    "type": "boolean"
                }
            }
        },
        "model.GroupDetailWithPublicKey": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "groupPublicKey": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intro": {
                    "description": "optional",
                    "type": "string"
                },
                "inviteCode": {
                    "type": "string"
                },
                "keyId": {
                    "type": "string"
                },
                "membersCount": {
                    "type": "integer"
                },
                "membersMax": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "description": "group is belongs to current member",
                    "type": "boolean"
                },
                "public": {
                    "description": "group is public or private",
                    "type": "boolean"
                }
            }
        },
        "model.GroupJoinReq": {
            "type": "object",
            "required": [
                "sharedPublic"
            ],
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "inviteCode": {
                    "description": "invite code from group member",
                    "type": "string"
                },
                "sharedPublic": {
                    "description": "Member's public key for ` + "`" + `ecdh` + "`" + ` exchange",
                    "type": "string"
                }
            }
        },
        "model.GroupJoinedListRes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intro": {
                    "description": "optional",
                    "type": "string"
                },
                "membersCount": {
                    "type": "integer"
                },
                "membersMax": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "unreadCount": {
                    "description": "unread message count",
                    "type": "integer"
                },
                "unreadId": {
                    "description": "first unread message id",
                    "type": "string"
                },
                "unreadTime": {
                    "description": "first unread message time",
                    "type": "string"
                }
            }
        },
        "model.GroupKeyUsed": {
            "type": "object",
            "required": [
                "groupId",
                "keyId"
            ],
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "keyId": {
                    "type": "string"
                }
            }
        },
        "model.GroupKeyUsedReq": {
            "type": "object",
            "required": [
                "keys"
            ],
            "properties": {
                "keys": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/model.GroupKeyUsed"
                    }
                }
            }
        },
        "model.GroupListRes": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intro": {
                    "description": "optional",
                    "type": "string"
                },
                "joined": {
                    "type": "boolean"
                },
                "membersCount": {
                    "type": "integer"
                },
                "membersMax": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GroupMemberReq": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "memberId": {
                    "type": "string"
                }
            }
        },
        "model.GroupPublicKey": {
            "type": "object",
            "properties": {
                "groupPublicKey": {
                    "type": "string"
                },
                "keyId": {
                    "type": "string"
                }
            }
        },
        "model.GroupShareKeyReq": {
            "type": "object",
            "required": [
                "groupId",
                "sharedPublic"
            ],
            "properties": {
                "groupId": {
                    "description": "group id",
                    "type": "string"
                },
                "sharedPublic": {
                    "description": "Member's public key for ` + "`" + `ecdh` + "`" + ` exchange",
                    "type": "string"
                }
            }
        },
        "model.GroupUpdateReq": {
            "type": "object",
            "required": [
                "groupId"
            ],
            "properties": {
                "category": {
                    "description": "group's category",
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "intro": {
                    "type": "string"
                },
                "maxMembers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            }
        },
        "model.Member": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "model.MemberNonceRes": {
            "type": "object",
            "properties": {
                "nonce": {
                    "type": "string"
                }
            }
        },
        "model.MemberProfile": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "description": "optional",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intro": {
                    "description": "optional",
                    "type": "string"
                },
                "nickname": {
                    "description": "optional",
                    "type": "string"
                }
            }
        },
        "model.MemberSigninRes": {
            "type": "object",
            "properties": {
                "profile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.MemberProfile"
                        }
                    ]
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.MemberUpdateReq": {
            "type": "object",
            "properties": {
                "intro": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "model.MemberWithPermission": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "member": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Member"
                        }
                    ]
                },
                "quote": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Message"
                        }
                    ]
                }
            }
        },
        "model.MessageCreateReq": {
            "type": "object",
            "required": [
                "content",
                "groupId",
                "memberId"
            ],
            "properties": {
                "content": {
                    "description": "encrypted message",
                    "type": "string"
                },
                "groupId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memberId": {
                    "type": "string"
                },
                "parentId": {
                    "description": "quote message id",
                    "type": "string"
                }
            }
        },
        "model.Pagination": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.PaginationRes": {
            "type": "object",
            "properties": {
                "items": {},
                "pagination": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Pagination"
                        }
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "ChatPuppy Api Doc",
	Description:      "# ChatPuppy Api Document\n\n## Auth\n- Add headers `Authorization Bearer {token}`\n- Add headers `X-Member-Address ${address}`\n\n## Signature\n1. Just post request\n2. Encrypt raw post body string to `MD5`, getting string `bodyMD5`\n3. Concatenate `timestamp` (from 1970, 10 digits) string end of step 2, getting string `s = bodyMD5 + timestamp`\n4. Sign `s` getting `signature` string\n5. Add headers `X-Signature ${signature}`\n6. Add headers `X-Timestamp ${timestamp}`\n\n## WebSocket\n> `/message`\n\n### Operates\n- 1: register\n- 2: set group key\n- 3: new group message\n",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
