// Code generated by ent, DO NOT EDIT.

package messageread

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the messageread type in the database.
	Label = "message_read"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMemberID holds the string denoting the member_id field in the database.
	FieldMemberID = "member_id"
	// FieldGroupID holds the string denoting the group_id field in the database.
	FieldGroupID = "group_id"
	// FieldLastID holds the string denoting the last_id field in the database.
	FieldLastID = "last_id"
	// FieldLastTime holds the string denoting the last_time field in the database.
	FieldLastTime = "last_time"
	// EdgeMember holds the string denoting the member edge name in mutations.
	EdgeMember = "member"
	// EdgeGroup holds the string denoting the group edge name in mutations.
	EdgeGroup = "group"
	// Table holds the table name of the messageread in the database.
	Table = "message_read"
	// MemberTable is the table that holds the member relation/edge.
	MemberTable = "message_read"
	// MemberInverseTable is the table name for the Member entity.
	// It exists in this package in order to avoid circular dependency with the "member" package.
	MemberInverseTable = "member"
	// MemberColumn is the table column denoting the member relation/edge.
	MemberColumn = "member_id"
	// GroupTable is the table that holds the group relation/edge.
	GroupTable = "message_read"
	// GroupInverseTable is the table name for the Group entity.
	// It exists in this package in order to avoid circular dependency with the "group" package.
	GroupInverseTable = "group"
	// GroupColumn is the table column denoting the group relation/edge.
	GroupColumn = "group_id"
)

// Columns holds all SQL columns for messageread fields.
var Columns = []string{
	FieldID,
	FieldMemberID,
	FieldGroupID,
	FieldLastID,
	FieldLastTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/chatpuppy/puppychat/internal/ent/runtime"
var (
	Hooks [1]ent.Hook
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
